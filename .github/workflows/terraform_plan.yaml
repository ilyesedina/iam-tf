name: plan
run-name: terraform plan by '@${{ github.actor }}'

on:
  workflow_call:
    inputs:
      env:
        type: string
        description: Github env to pull vars and secrets from
      environment:
        type: string
        description: Environment for folder structure
      project:
        type: string
        description: The terraform project
    outputs:
      changes:
        description: "Boolean indicating if terraform has planned changes or not."
        value: ${{ jobs.create-plan.outputs.changes}}
permissions:
  id-token: write   # This is required for requesting the JWT through OIDC
  contents: read    # This is required for actions/checkout

jobs:
  create-plan:
    name: Terraform plan
    runs-on: ubuntu-latest
    environment: ${{ inputs.env }}
    outputs:
      changes: ${{ steps.detect_changes.outputs.NO_CHANGES == '' }}
    steps:
      - name: Git clone current repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Extract aws_profile
        run: |
          echo "REQUIRED_AWS_PROFILE=$(grep profile providers.tf  |awk '{print $3}' |sed 's/\"//g'|head -1 | sed 's/${local.environment}/${{inputs.environment}}/')" >> $GITHUB_OUTPUT
        id: extract_aws_profile
        working-directory: '${{ inputs.project }}/environments/${{ inputs.environment }}'

      - name: Extract aws_account_id
        run: |
          echo "AWS_ACCOUNT_ID=$(grep bucket state.tf | grep -o -E "[0-9]+")" >> $GITHUB_OUTPUT
        id: extract_aws_account_id
        working-directory: '${{ inputs.project }}/environments/${{ inputs.environment }}'

      - name: Configure AWS credentials with profile
        uses: Moulick/configure-multiple-aws-roles@v4
        with:
          role-to-assume: "arn:aws:iam::${{ steps.extract_aws_account_id.outputs.AWS_ACCOUNT_ID }}:role/assumerole-oidc-github.com"
          role-session-name: "run-${{ github.run_id }}"
          aws-region: "eu-west-1"
          profile: ${{ steps.extract_aws_profile.outputs.REQUIRED_AWS_PROFILE }}
          only-profile: true
          whoami: true

      - name: Inject github token into LEGO git urls to make terraform module download work
        if: github.secret_source != 'None'
        run: |
          git config --global url."https://oauth2:$GH_TOKEN@github.com/LEGO/".insteadOf "ssh://git@github.com/LEGO/";
        env:
          GH_TOKEN: ${{ steps.generate-token.outputs.token }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Terraform init
        run: terraform init
        working-directory: '${{ inputs.project }}/environments/${{ inputs.environment }}'

      - name: Terraform plan
        id: terraform_plan
        run: "terraform plan -out generated_plan | tee -a plan.txt"
        working-directory: '${{ inputs.project }}/environments/${{ inputs.environment }}'

      - name: Detect if plan has changes
        id: detect_changes
        run: echo "NO_CHANGES=$(grep 'No changes' plan.txt)" >> $GITHUB_OUTPUT
        working-directory: '${{ inputs.project }}/environments/${{ inputs.environment }}'

      - name: upload plan
        uses: actions/upload-artifact@master
        with:
          name: generated_plan
          path: '${{ inputs.project }}/environments/${{ inputs.environment }}/generated_plan'
        if: "! steps.detect_changes.outputs.NO_CHANGES"
